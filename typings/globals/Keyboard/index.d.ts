// Generated by typings
// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/398bd742115e2b071ab3edf8b543b6df6fa62dc2/cordova-ionic/plugins/keyboard.d.ts
declare namespace Ionic {
  interface Keyboard {

    /**
     * Hide the keyboard accessory bar with the next, previous and done buttons.
     *
     * @param hide
     */
    hideKeyboardAccessoryBar(hide:boolean): void;

    /**
     * Close the keyboard if it is open.
     */
    close(): void;

    /**
     * Force keyboard to be shown on Android.
     * This typically helps if autofocus on a text element does not pop up the keyboard automatically
     *
     * Supported Platforms: Android, Blackberry 10
     */
    show(): void;

    /**
     * Disable native scrolling, useful if you are using JavaScript to scroll
     *
     * @param disbale
     */
    disableScroll(disbale:boolean): void;

    /**
     * Whether or not the keyboard is currently visible.
     */
    isVisible: boolean;
  }
}
lbar features the Prev, Next, and Done buttons.
     *
     * Example:
     * <code>
     * Keyboard.hideFormAccessoryBar(true);
     * Keyboard.hideFormAccessoryBar(false);
     * </code>
     *
     * @param hide
     */
    hideFormAccessoryBar(hide:boolean): void,

    /**
     * Disable scrolling when the the WebView is shrunk.
     *
     * Set to true to disable scrolling when the WebView is shrunk.
     *
     * Example:
     * <code>
     * Keyboard.disableScrollingInShrinkView(true);
     * Keyboard.disableScrollingInShrinkView(false);
     * </code>
     *
     * @param disable
     */
    disableScrollingInShrinkView(disable:boolean): void,

    // Properties

    /**
     * Determine if the keyboard is visible.
     *
     * Read this property to determine if the keyboard is visible.
     *
     * Example:
     * <code>
     * if (Keyboard.isVisible) {
     * // do something
     * }
     * </code>
     *
     */
    isVisible: boolean,
    /**
     * Specifies whenether content of page would be autoamtically scrolled to the top of the page when keyboard is hiding.
     *
     * Set this to true if you need that page scroll to beginning when keyboard is hiding.
     * This is allows to fix issue with elements declared with position: fixed, after keyboard is hiding.
     *
     * Example:
     * <code>
     *     Keyboard.automaticScrollToTopOnHiding = true;
     * </code>
     *
     */
    automaticScrollToTopOnHiding: boolean,

    // Events

    /**
     * If defined, this function is fired when keyboard fully shown.
     *
     * Attach handler to this event to be able to receive notification when keyboard is shown.
     *
     * Example:
     * <code>
     * Keyboard.onshow = function () {
     *     // Describe your logic which will be run each time keyboard is shown.
     * }
     * </code>
     *
     */
    onshow():void,
    /**
     * If defined, this function is fired when keyboard fully closed.
     *
     * Attach handler to this event to be able to receive notification when keyboard is closed.
     *
     * Example:
     * <code>
     * Keyboard.onhide = function () {
     *     // Describe your logic which will be run each time keyboard is closed.
     * }
     * </code>
     *
     */
    onhide():void,
    /**
     * If defined, this function is fired before keyboard will be shown.
     *
     * Attach handler to this event to be able to receive notification when keyboard is about to be shown on the screen.
     *
     * Example:
     * <code>
     * Keyboard.onshowing = function () {
     *     // Describe your logic which will be run each time when keyboard is about to be shown.
     * }
     * </code>
     *
     */
    onshowing():void,
    /**
     * If defined, this function is fired when keyboard is about to be closed.
     *
     * Attach handler to this event to be able to receive notification when keyboard is about to be closed.
     *
     * Example:
     * <code>
     * Keyboard.onhiding = function () {
     *     // Describe your logic which will be run each time when keyboard is about to be closed.
     * }
     * </code>
     *
     */
    onhiding():void,

}

declare var Keyboard:Keyboard;
